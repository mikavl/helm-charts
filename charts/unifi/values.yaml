# Default values for unifi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jacobalberty/unifi
  # This chart uses the "latest" tag, so always pull the image
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

persistence:
  enabled: false
  size: 128Mi
  storageClassName: ""

env:
  - name: TZ
    value: Europe/Helsinki
  - name: DB_NAME
    value: unifi
  - name: DB_URI
    value: mongodb://mongo/unifi
  - name: STATDB_URI
    value: mongodb://mongo/unifi_stat
  - name: JVM_INIT_HEAP_SIZE
    value: 512M
  - name: JVM_MAX_HEAP_SIZE
    value: 512M

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 999
  runAsGroup: 999
  fsGroup: 999

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

service:
  type: ClusterIP
  ports:
    stun: 3478
    controller: 8080
    https: 8443

ingress:
  enabled: false
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 512Mi
  limits:
    cpu: 1000m
    memory: 768Mi

extraVolumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

extraVolumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
