mongo:
  # Default values for mongo.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: library/mongo
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "3.6"

  persistence:
    size: 1Gi
    storageClassName: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    runAsUser: 10000
    runAsGroup: 10000
    fsGroup: 10000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  service:
    type: ClusterIP
    port: 27017

  resources:
    limits:
      cpu: 100m
      memory: 250Mi
    requests:
      cpu: 100m
      memory: 250Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

unifi:
  # Default values for unifi.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  replicaCount: 1

  image:
    repository: jacobalberty/unifi
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  persistence:
    size: 1Gi
    storageClassName: ""

  env:
    - name: TZ
      value: Europe/Helsinki
    - name: DB_NAME
      value: unifi
    - name: DB_URI
      value: mongodb://mongo/unifi
    - name: STATDB_URI
      value: mongodb://mongo/unifi_stat
    - name: JVM_INIT_HEAP_SIZE
      value: 512M
    - name: JVM_MAX_HEAP_SIZE
      value: 512M

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  service:
    controller:
      type: ClusterIP
      ports:
        stun: 3478
        controller: 8080
      nodePorts: {}
        # stun:
        # controller:
    https:
      type: ClusterIP
      port: 443

  ingress:
    enabled: false
    className: ""
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: "1"
      memory: 1000Mi
    requests:
      cpu: 100m
      memory: 500Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
